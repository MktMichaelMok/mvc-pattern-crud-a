@model MobiForm30.Models.RoleViewModel

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "updateForm" })) {

    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RoleSeq, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoleSeq, new { htmlAttributes = new { @class = "form-control", id = "edit_RoleSeq", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoleID, new { htmlAttributes = new { @class = "form-control", id = "edit_RoleID" } })
                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control", id = "edit_RoleName" } })
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" id="btnUpdate" value="存檔" />
                <input type="button" id="btnCancelUpdate" value="取消" />
            </div>
        </div>



    </div>
}


@*@section Scripts
{
    <script type="text/javascript">        

    </script>

@Scripts.Render("~/bundles/jqueryval")

}*@

